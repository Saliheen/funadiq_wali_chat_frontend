import Loader from "@/components/common/Loader";
import API from "@/utils/API";
import getHeader from "@/utils/getHeader";
import Head from "next/head";
import React,{useState,useEffect,useRef} from "react";


export default function uploadimage() {
  const [loading,setLoading] = useState(false)
  const [payload,setPayload] = useState(null)
  const [imageUrl,setImageUrl] = useState(null)
  const inputRef = useRef()
  const header = getHeader()
  
  const saveImage = async () => {
    setLoading(true)
    const formData = new FormData()
    formData.append('file',payload)
    try {
      const formdataHeader = {
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'multipart/form-data'      
        }}
        
        const {data} = await API.post('message/add_image',formData,formdataHeader)
        console.log(data)
      setLoading(false)
    } catch (error) {
      console.log(error)
      setLoading(false)
    }
  }

  const loadMessage = async()=>{
    console.log('function working')
    setLoading(true)
    try {
      const {data} = await API.get('message/get_message',header)
      console.log(data)
      setImageUrl(data?.data?.imageUrl)
     setLoading(false)
    } catch (error) {
      console.log(error)
     
      setLoading(false)
    }
  }
  useEffect(()=>{
    loadMessage()
  },[])

  return (
    <>
      <Head>
        <title>Funadiq</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <input ref={inputRef} className = 'hidden' type={'file'}
      onChange = {(e)=>{
        console.log(e.target.files[0])
        setPayload(e.target.files[0])
      }}
      
      />
      <div className="w-full h-full flex p-[40px]">
        <div className="flex-1 self-stretch border-[2px] border-[#838383] border-dashed  rounded-lg relative">
          <h1 className="text-[#626FC1] pl-[40px] pt-[40px] text-2xl font-medium">
            Upload Image
          </h1>
          <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 pt-7">
            <div className="flex flex-col items-center ">
              <div className="flex flex-row items-center space-x-[9px]">
                <div
                  className="h-[180px] w-[310px] rounded-xl cursor-pointer"
                  style={{
                    border: "2px dashed #67A6D7",
                  }}
                  onClick = {()=>inputRef.current.click()}
                ></div>
                <div>
                  <img src="./arrowblue.png" alt="" />
                </div>
                <div
                  className="h-[180px] w-[310px] rounded-xl overflow-hidden relative"
                  style={{
                    border: "2px dashed #67A6D7",
                  }}
                >
                   <img src={imageUrl}
                    className='h-full w-full'/>
                </div>
              </div>
              <div>
                <div className="max-w-[442px]">
                  <h1 className="text-center mt-[40px] font-reem-kufi font-medium text-base text-[#838383]">
                    Drag a<span className="text-[#67A6D7]"> JPEG or PNG </span>
                    file here or upload via the button to upload the image from
                    it
                  </h1>
                  <div className="flex flex-row space-x-[20px] mt-[40px]">
                    <div className=" flex-1 h-[44px] rounded-[7px] bg-[#40B98B] flex items-center justify-center cursor-pointer">
                      <h1 className="font-reem-kufi text-white font-normal">
                        Cancel
                      </h1>
                    </div>
                    <div className=" flex-1 h-[44px] rounded-[7px] bg-[#67A6D7] flex items-center justify-center cursor-pointer"
                    onClick={()=>saveImage()}
                    >

                      <h1 className="font-reem-kufi text-white font-normal">
                        Upload Image
                      </h1>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      {loading && <Loader />}
    </>
  );
}
